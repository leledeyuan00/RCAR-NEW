@import './variables';

// reset
* {
  box-sizing: border-box;

  outline: none;
}

html {
  font-size: 13px;
}

body {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
  line-height: 1.2em;
  background: #f1f1f1;
  -webkit-font-smoothing: antialiased;
}

a {
  color: map-get($colors, "black" );
}

p{
  line-height: 1.5em;
}

// colors


@each $colorKey, $color in $colors {
  .text-#{$colorKey} {
    color: $color;
  }

  .bg-#{$colorKey} {
    background-color: $color;
  }
}

@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var !important; 
  }
}



@each $sizeKey, $size in $font-sizes {
  .fs-#{$sizeKey} {
    font-size: $size * $base-font-size;
  }
}

@each $sizeKey, $size in $font-weights {
  .fw-#{$sizeKey} {
    font-weight: $size;
  }
}
// text overflow
.text-ellipsis{
  display:inline-block;
  overflow:hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// width, height
.w-100 {
  width: 100%;
}
.h-100 {
  height: 100%;
}
.d-flex {
  display: flex;
}
.flex-column {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}


@each $key, $value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value;
  }
}


@each $key, $value in $flex-ai {
  .ai-#{$key} {
    align-items: $value;
  }
}

.flex-1 {
  flex: 1;
}
.flex-grow-1 {
  flex-grow: 1;
}


@each $typeKey, $type in $spacing-types {
  // .m-1
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $spacing-base-size;
    }
  }
  // .mx-1
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-left: $size * $spacing-base-size;
      #{$type}-right: $size * $spacing-base-size;
    }
    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size * $spacing-base-size;
      #{$type}-bottom: $size * $spacing-base-size;
    }
  }
  // .mt-1
  @each $directionKey, $direction in $spacing-directions {
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $spacing-base-size;
      }
    }
  }
}

.btn {
  border: none;
  border-radius: 0.1538rem;
  font-size: map-get($font-sizes, "sm") * $base-font-size;
  padding: 0.2rem 0.6rem;
}

//nav
.nav {
  display: flex;
  .nav-item {
    border-bottom: 3px solid transparent;
    padding-bottom: 0.2rem;
    &.active {
      color:map-get($colors, "primary");
      border-bottom: 3px solid map-get($colors, "primary");
    }
  }
  &.nav-inverse{
    .nav-item{
      color:map-get($colors, "white" );
      &.active{
        border-bottom-color: map-get($colors, "white" )
      }
    }
  }
}


// boders
@each $dir in (top,right,bottom,left){
  .border-#{$dir}{
    border-#{$dir}: 1px solid $border-color
  }
}

.border-body{
  border-left: 1px solid $border-color;
  border-right: 1px solid $border-color;
  border-bottom: 1px solid $border-color;
  margin-bottom: 1rem;
  // padding-bottom: 1rem;
}

//heading
.head-bar{
  border-bottom-color: rgb(222, 226, 230);
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-collapse: collapse;
  border-top-color: rgb(222, 226, 230);
  border-top-style: solid;
  border-top-width: 1px;
  box-sizing: border-box;
  vertical-align: bottom;
  text-align: center;
  height: 36px;
  padding: 9.75px;
  font-size: map-get($font-sizes,"xl")* $base-font-size;
  font-weight: map-get($font-weights, "xl" );
  background-color: map-get($colors, "main-1");
}